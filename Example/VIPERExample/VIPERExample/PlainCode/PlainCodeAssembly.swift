//
//  PlainCodeAssembly.swift
//  VIPERExample
//
//  Created by Sergey Petrachkov on 20/09/2017.
//  Copyright (c) 2017 Sergey Petrachkov. All rights reserved.
//
//  This file was generated by the SergeyPetrachkov VIPER Xcode Templates so
//  you can apply VIPER architecture to your iOS projects
//

import UIKit

class PlainCodeAssembly {
  // MARK: - Public methods
  static func createModule() -> PlainCodeViewController {
    let controller = PlainCodeViewController() 
    let presenter = injectPresenter()
    presenter.output = controller
    presenter.view = controller
    controller.presenter = presenter
    return controller
  }
  // MARK: - Private injections
  fileprivate static func injectPresenter() -> PlainCodePresenterInput {
    let presenter = PlainCodePresenter()
    let interactor = injectInteractor()
    interactor.output = presenter
    presenter.interactor = interactor
    let router = injectRouter()
    presenter.router = router
    return presenter
  }
  fileprivate static func injectInteractor() -> PlainCodeInteractorInput {
    return PlainCodeInteractor()
  }
  fileprivate static func injectRouter() -> PlainCodeRoutingLogic {
    return PlainCodeRouter()
  }
}