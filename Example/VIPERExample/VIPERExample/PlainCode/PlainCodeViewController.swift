//
//  PlainCodeViewController.swift
//  VIPERExample
//
//  Created by Sergey Petrachkov on 20/09/2017.
//  Copyright (c) 2017 Sergey Petrachkov. All rights reserved.
//
//  This file was generated by the SergeyPetrachkov VIPER Xcode Templates so
//  you can apply VIPER architecture to your iOS projects
//

import UIKit

class PlainCodeViewController: UIViewController {
  // MARK: - UI properties
  let navigationButton: UIButton = {
    let button = UIButton(type: .custom)
    button.setTitle("Show modal controller", for: .normal)
    button.setTitleColor(UIColor.green, for: .normal)
    button.setTitleColor(UIColor(red: 0, green: 1, blue: 0, alpha: 0.8), for: .highlighted)
    button.sizeToFit()
    return button
  }()
  // MARK: - Essentials
  var presenter : PlainCodePresenterInput?

  // MARK: Initializers
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
  }
  required init?(coder aDecoder: NSCoder) {
    super.init(coder: aDecoder)
  }
  
  // MARK: - Setup
  private func setup() {
    self.view.backgroundColor = UIColor.lightGray
    self.navigationButton.frame = CGRect(origin: CGPoint(x: self.view.center.x - self.navigationButton.bounds.size.width / 2,
                                                         y: self.view.center.y - self.navigationButton.bounds.size.height / 2),
                                         size: self.navigationButton.bounds.size)
    self.navigationButton.addTarget(self, action: #selector(self.buttonTapped), for: .touchUpInside)
    self.view.addSubview(self.navigationButton)
  }
  
  // MARK: - Lifecycle
  override func viewDidLoad() {
    super.viewDidLoad()
    self.setup()
  }
  
  // MARK: - Actions
  @objc fileprivate func buttonTapped() {
    self.presenter?.presentDialog()
  }
}
extension PlainCodeViewController : PlainCodePresenterOutput {
  func didChangeState(viewModel : PlainCode.DataContext.ViewModel) {
    
  }
}
