//
//  ___FILENAME___
//  ___PROJECTNAME___
//
//  Created by ___FULLUSERNAME___ on ___DATE___.
//  Copyright (c) ___YEAR___ ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the SergeyPetrachkov VIPER Xcode Templates so
//  you can apply VIPER architecture to your iOS projects
//

import UIKit

class TabHostAssembly {

  // MARK: - Public methods
  static func createModule() -> TabHostViewController {
    let controller = TabHostViewController()
    
    let presenter = injectPresenter()
    presenter.output = controller
    presenter.view = controller
    controller.presenter = presenter
    
    // add child controllers here
    
    return controller
  }
  
  // MARK: - Private injections
  fileprivate static func injectPresenter() -> TabHostPresenterInput {
    let presenter = TabHostPresenter()
    let router = injectRouter()
    presenter.router = router
    let interactor = injectInteractor()
    interactor.output = presenter
    presenter.interactor = interactor
    return presenter
  }
  
  fileprivate static func injectInteractor() -> TabHostInteractorInput {
    let interactor = TabHostInteractor()
    return interactor
  }
  
  fileprivate static func injectRouter() -> TabHostRoutingLogic {
    return TabHostRouter()
  }
}
